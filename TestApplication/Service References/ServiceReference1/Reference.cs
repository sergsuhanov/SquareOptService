//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/glassCAD.WCF.SquareOpt")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestApplication.ServiceReference1.CutDepth CutDepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DestinationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DestinationSquareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestApplication.ServiceReference1.Destination[] DestinationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOptimizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LastDestinationHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LastDestinationWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLenCuttingXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLenCuttingYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlateCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PlateSquareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestApplication.ServiceReference1.Plate[] PlatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WastePercentAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WastePercentBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WasteSquareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WasteTrashSquareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WasteWorkSquareField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestApplication.ServiceReference1.CutDepth CutDepth {
            get {
                return this.CutDepthField;
            }
            set {
                if ((this.CutDepthField.Equals(value) != true)) {
                    this.CutDepthField = value;
                    this.RaisePropertyChanged("CutDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DestinationCount {
            get {
                return this.DestinationCountField;
            }
            set {
                if ((this.DestinationCountField.Equals(value) != true)) {
                    this.DestinationCountField = value;
                    this.RaisePropertyChanged("DestinationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DestinationSquare {
            get {
                return this.DestinationSquareField;
            }
            set {
                if ((this.DestinationSquareField.Equals(value) != true)) {
                    this.DestinationSquareField = value;
                    this.RaisePropertyChanged("DestinationSquare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestApplication.ServiceReference1.Destination[] Destinations {
            get {
                return this.DestinationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationsField, value) != true)) {
                    this.DestinationsField = value;
                    this.RaisePropertyChanged("Destinations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOptimized {
            get {
                return this.IsOptimizedField;
            }
            set {
                if ((this.IsOptimizedField.Equals(value) != true)) {
                    this.IsOptimizedField = value;
                    this.RaisePropertyChanged("IsOptimized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LastDestinationHeight {
            get {
                return this.LastDestinationHeightField;
            }
            set {
                if ((this.LastDestinationHeightField.Equals(value) != true)) {
                    this.LastDestinationHeightField = value;
                    this.RaisePropertyChanged("LastDestinationHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LastDestinationWidth {
            get {
                return this.LastDestinationWidthField;
            }
            set {
                if ((this.LastDestinationWidthField.Equals(value) != true)) {
                    this.LastDestinationWidthField = value;
                    this.RaisePropertyChanged("LastDestinationWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLenCuttingX {
            get {
                return this.MaxLenCuttingXField;
            }
            set {
                if ((this.MaxLenCuttingXField.Equals(value) != true)) {
                    this.MaxLenCuttingXField = value;
                    this.RaisePropertyChanged("MaxLenCuttingX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLenCuttingY {
            get {
                return this.MaxLenCuttingYField;
            }
            set {
                if ((this.MaxLenCuttingYField.Equals(value) != true)) {
                    this.MaxLenCuttingYField = value;
                    this.RaisePropertyChanged("MaxLenCuttingY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlateCount {
            get {
                return this.PlateCountField;
            }
            set {
                if ((this.PlateCountField.Equals(value) != true)) {
                    this.PlateCountField = value;
                    this.RaisePropertyChanged("PlateCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PlateSquare {
            get {
                return this.PlateSquareField;
            }
            set {
                if ((this.PlateSquareField.Equals(value) != true)) {
                    this.PlateSquareField = value;
                    this.RaisePropertyChanged("PlateSquare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestApplication.ServiceReference1.Plate[] Plates {
            get {
                return this.PlatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatesField, value) != true)) {
                    this.PlatesField = value;
                    this.RaisePropertyChanged("Plates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WastePercentA {
            get {
                return this.WastePercentAField;
            }
            set {
                if ((this.WastePercentAField.Equals(value) != true)) {
                    this.WastePercentAField = value;
                    this.RaisePropertyChanged("WastePercentA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WastePercentB {
            get {
                return this.WastePercentBField;
            }
            set {
                if ((this.WastePercentBField.Equals(value) != true)) {
                    this.WastePercentBField = value;
                    this.RaisePropertyChanged("WastePercentB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WasteSquare {
            get {
                return this.WasteSquareField;
            }
            set {
                if ((this.WasteSquareField.Equals(value) != true)) {
                    this.WasteSquareField = value;
                    this.RaisePropertyChanged("WasteSquare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WasteTrashSquare {
            get {
                return this.WasteTrashSquareField;
            }
            set {
                if ((this.WasteTrashSquareField.Equals(value) != true)) {
                    this.WasteTrashSquareField = value;
                    this.RaisePropertyChanged("WasteTrashSquare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WasteWorkSquare {
            get {
                return this.WasteWorkSquareField;
            }
            set {
                if ((this.WasteWorkSquareField.Equals(value) != true)) {
                    this.WasteWorkSquareField = value;
                    this.RaisePropertyChanged("WasteWorkSquare");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CutDepth", Namespace="http://schemas.datacontract.org/2004/07/glassCAD.WCF.SquareOpt")]
    public enum CutDepth : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Max = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Z = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Destination", Namespace="http://schemas.datacontract.org/2004/07/glassCAD.WCF.SquareOpt")]
    [System.SerializableAttribute()]
    public partial class Destination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarryOverWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequaredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumPosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dCutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int B {
            get {
                return this.BField;
            }
            set {
                if ((this.BField.Equals(value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarryOverWidth {
            get {
                return this.CarryOverWidthField;
            }
            set {
                if ((this.CarryOverWidthField.Equals(value) != true)) {
                    this.CarryOverWidthField = value;
                    this.RaisePropertyChanged("CarryOverWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequared {
            get {
                return this.IsRequaredField;
            }
            set {
                if ((this.IsRequaredField.Equals(value) != true)) {
                    this.IsRequaredField = value;
                    this.RaisePropertyChanged("IsRequared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int L {
            get {
                return this.LField;
            }
            set {
                if ((this.LField.Equals(value) != true)) {
                    this.LField = value;
                    this.RaisePropertyChanged("L");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumPos {
            get {
                return this.NumPosField;
            }
            set {
                if ((this.NumPosField.Equals(value) != true)) {
                    this.NumPosField = value;
                    this.RaisePropertyChanged("NumPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qu {
            get {
                return this.QuField;
            }
            set {
                if ((this.QuField.Equals(value) != true)) {
                    this.QuField = value;
                    this.RaisePropertyChanged("Qu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int R {
            get {
                return this.RField;
            }
            set {
                if ((this.RField.Equals(value) != true)) {
                    this.RField = value;
                    this.RaisePropertyChanged("R");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int T {
            get {
                return this.TField;
            }
            set {
                if ((this.TField.Equals(value) != true)) {
                    this.TField = value;
                    this.RaisePropertyChanged("T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkHeight {
            get {
                return this.WorkHeightField;
            }
            set {
                if ((this.WorkHeightField.Equals(value) != true)) {
                    this.WorkHeightField = value;
                    this.RaisePropertyChanged("WorkHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkWidth {
            get {
                return this.WorkWidthField;
            }
            set {
                if ((this.WorkWidthField.Equals(value) != true)) {
                    this.WorkWidthField = value;
                    this.RaisePropertyChanged("WorkWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dCut {
            get {
                return this.dCutField;
            }
            set {
                if ((this.dCutField.Equals(value) != true)) {
                    this.dCutField = value;
                    this.RaisePropertyChanged("dCut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plate", Namespace="http://schemas.datacontract.org/2004/07/glassCAD.WCF.SquareOpt")]
    [System.SerializableAttribute()]
    public partial class Plate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumPosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumPos {
            get {
                return this.NumPosField;
            }
            set {
                if ((this.NumPosField.Equals(value) != true)) {
                    this.NumPosField = value;
                    this.RaisePropertyChanged("NumPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qu {
            get {
                return this.QuField;
            }
            set {
                if ((this.QuField.Equals(value) != true)) {
                    this.QuField = value;
                    this.RaisePropertyChanged("Qu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportMode", Namespace="http://schemas.datacontract.org/2004/07/glassCAD.WCF.SquareOpt")]
    public enum ExportMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultReportPdf = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hegla = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Intermac = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISquareOptService")]
    public interface ISquareOptService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Test", ReplyAction="http://tempuri.org/ISquareOptService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Test", ReplyAction="http://tempuri.org/ISquareOptService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Add", ReplyAction="http://tempuri.org/ISquareOptService/AddResponse")]
        TestApplication.ServiceReference1.Document Add(string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Add", ReplyAction="http://tempuri.org/ISquareOptService/AddResponse")]
        System.Threading.Tasks.Task<TestApplication.ServiceReference1.Document> AddAsync(string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/GetHeaders", ReplyAction="http://tempuri.org/ISquareOptService/GetHeadersResponse")]
        TestApplication.ServiceReference1.Document[] GetHeaders(string companyCode, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/GetHeaders", ReplyAction="http://tempuri.org/ISquareOptService/GetHeadersResponse")]
        System.Threading.Tasks.Task<TestApplication.ServiceReference1.Document[]> GetHeadersAsync(string companyCode, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Load", ReplyAction="http://tempuri.org/ISquareOptService/LoadResponse")]
        TestApplication.ServiceReference1.Document Load(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Load", ReplyAction="http://tempuri.org/ISquareOptService/LoadResponse")]
        System.Threading.Tasks.Task<TestApplication.ServiceReference1.Document> LoadAsync(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Save", ReplyAction="http://tempuri.org/ISquareOptService/SaveResponse")]
        void Save(string companyCode, TestApplication.ServiceReference1.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Save", ReplyAction="http://tempuri.org/ISquareOptService/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(string companyCode, TestApplication.ServiceReference1.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Delete", ReplyAction="http://tempuri.org/ISquareOptService/DeleteResponse")]
        void Delete(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Delete", ReplyAction="http://tempuri.org/ISquareOptService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Check", ReplyAction="http://tempuri.org/ISquareOptService/CheckResponse")]
        string[] Check(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Check", ReplyAction="http://tempuri.org/ISquareOptService/CheckResponse")]
        System.Threading.Tasks.Task<string[]> CheckAsync(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Optimize", ReplyAction="http://tempuri.org/ISquareOptService/OptimizeResponse")]
        bool Optimize(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Optimize", ReplyAction="http://tempuri.org/ISquareOptService/OptimizeResponse")]
        System.Threading.Tasks.Task<bool> OptimizeAsync(string companyCode, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Export", ReplyAction="http://tempuri.org/ISquareOptService/ExportResponse")]
        byte[] Export(string companyCode, int id, TestApplication.ServiceReference1.ExportMode mode, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISquareOptService/Export", ReplyAction="http://tempuri.org/ISquareOptService/ExportResponse")]
        System.Threading.Tasks.Task<byte[]> ExportAsync(string companyCode, int id, TestApplication.ServiceReference1.ExportMode mode, string parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISquareOptServiceChannel : TestApplication.ServiceReference1.ISquareOptService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SquareOptServiceClient : System.ServiceModel.ClientBase<TestApplication.ServiceReference1.ISquareOptService>, TestApplication.ServiceReference1.ISquareOptService {
        
        public SquareOptServiceClient() {
        }
        
        public SquareOptServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SquareOptServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SquareOptServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SquareOptServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public TestApplication.ServiceReference1.Document Add(string companyCode) {
            return base.Channel.Add(companyCode);
        }
        
        public System.Threading.Tasks.Task<TestApplication.ServiceReference1.Document> AddAsync(string companyCode) {
            return base.Channel.AddAsync(companyCode);
        }
        
        public TestApplication.ServiceReference1.Document[] GetHeaders(string companyCode, System.DateTime from, System.DateTime to) {
            return base.Channel.GetHeaders(companyCode, from, to);
        }
        
        public System.Threading.Tasks.Task<TestApplication.ServiceReference1.Document[]> GetHeadersAsync(string companyCode, System.DateTime from, System.DateTime to) {
            return base.Channel.GetHeadersAsync(companyCode, from, to);
        }
        
        public TestApplication.ServiceReference1.Document Load(string companyCode, int id) {
            return base.Channel.Load(companyCode, id);
        }
        
        public System.Threading.Tasks.Task<TestApplication.ServiceReference1.Document> LoadAsync(string companyCode, int id) {
            return base.Channel.LoadAsync(companyCode, id);
        }
        
        public void Save(string companyCode, TestApplication.ServiceReference1.Document document) {
            base.Channel.Save(companyCode, document);
        }
        
        public System.Threading.Tasks.Task SaveAsync(string companyCode, TestApplication.ServiceReference1.Document document) {
            return base.Channel.SaveAsync(companyCode, document);
        }
        
        public void Delete(string companyCode, int id) {
            base.Channel.Delete(companyCode, id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string companyCode, int id) {
            return base.Channel.DeleteAsync(companyCode, id);
        }
        
        public string[] Check(string companyCode, int id) {
            return base.Channel.Check(companyCode, id);
        }
        
        public System.Threading.Tasks.Task<string[]> CheckAsync(string companyCode, int id) {
            return base.Channel.CheckAsync(companyCode, id);
        }
        
        public bool Optimize(string companyCode, int id) {
            return base.Channel.Optimize(companyCode, id);
        }
        
        public System.Threading.Tasks.Task<bool> OptimizeAsync(string companyCode, int id) {
            return base.Channel.OptimizeAsync(companyCode, id);
        }
        
        public byte[] Export(string companyCode, int id, TestApplication.ServiceReference1.ExportMode mode, string parameters) {
            return base.Channel.Export(companyCode, id, mode, parameters);
        }
        
        public System.Threading.Tasks.Task<byte[]> ExportAsync(string companyCode, int id, TestApplication.ServiceReference1.ExportMode mode, string parameters) {
            return base.Channel.ExportAsync(companyCode, id, mode, parameters);
        }
    }
}
